// <auto-generated />
using CypherBot.DataAccess.Repos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CypherBot.DataAccess.Migrations
{
    [DbContext(typeof(CypherContext))]
    [Migration("20181216050121_AddedGenretoArtifacts")]
    partial class AddedGenretoArtifacts
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity("CypherBot.Models.Artifact", b =>
                {
                    b.Property<int>("ArtifactId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Depletion")
                        .HasMaxLength(20);

                    b.Property<string>("Effect")
                        .HasColumnType("varchar(2000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Form")
                        .HasMaxLength(100);

                    b.Property<string>("Genre")
                        .HasMaxLength(20);

                    b.Property<int>("LevelBonus");

                    b.Property<int>("LevelDie");

                    b.Property<string>("Name")
                        .HasMaxLength(30);

                    b.Property<string>("Source")
                        .HasMaxLength(20);

                    b.HasKey("ArtifactId");

                    b.ToTable("Artifacts");
                });

            modelBuilder.Entity("CypherBot.Models.Character", b =>
                {
                    b.Property<int>("CharacterId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descriptor");

                    b.Property<string>("Focus");

                    b.Property<int>("IntPool");

                    b.Property<int>("MightPool");

                    b.Property<string>("Name")
                        .HasMaxLength(30);

                    b.Property<string>("Player")
                        .HasMaxLength(30);

                    b.Property<int>("RecoveryDie");

                    b.Property<int>("RecoveryMod");

                    b.Property<int>("SpeedPool");

                    b.Property<int>("Tier");

                    b.Property<string>("Type");

                    b.Property<int>("XP");

                    b.HasKey("CharacterId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("CypherBot.Models.CharacterAbility", b =>
                {
                    b.Property<int>("CharacterAbilityId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CharacterId");

                    b.Property<string>("Description")
                        .HasMaxLength(1000);

                    b.Property<string>("Name")
                        .HasMaxLength(30);

                    b.Property<int>("Tier");

                    b.HasKey("CharacterAbilityId");

                    b.HasIndex("CharacterId");

                    b.ToTable("CharacterAbilities");
                });

            modelBuilder.Entity("CypherBot.Models.CharacterArtifact", b =>
                {
                    b.Property<int>("ArtifactId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CharacterId");

                    b.Property<string>("Depletion")
                        .HasMaxLength(20);

                    b.Property<string>("Effect")
                        .HasColumnType("varchar(2000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Form")
                        .HasMaxLength(100);

                    b.Property<int>("Level");

                    b.Property<int>("LevelBonus");

                    b.Property<int>("LevelDie");

                    b.Property<string>("Name")
                        .HasMaxLength(30);

                    b.Property<string>("Source")
                        .HasMaxLength(20);

                    b.HasKey("ArtifactId");

                    b.HasIndex("CharacterId");

                    b.ToTable("CharacterArtifacts");
                });

            modelBuilder.Entity("CypherBot.Models.CharacterCypher", b =>
                {
                    b.Property<int>("CypherId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CharacterId");

                    b.Property<string>("Effect")
                        .HasColumnType("varchar(2000)");

                    b.Property<int>("Level");

                    b.Property<int>("LevelBonus");

                    b.Property<int>("LevelDie");

                    b.Property<string>("Name")
                        .HasMaxLength(30);

                    b.Property<string>("Source")
                        .HasMaxLength(20);

                    b.Property<string>("Type")
                        .HasMaxLength(15);

                    b.HasKey("CypherId");

                    b.HasIndex("CharacterId");

                    b.ToTable("CharacterCyphers");
                });

            modelBuilder.Entity("CypherBot.Models.CharacterInventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CharacterId");

                    b.Property<string>("ItemName")
                        .HasMaxLength(50);

                    b.Property<int>("Qty");

                    b.HasKey("InventoryId");

                    b.HasIndex("CharacterId");

                    b.ToTable("CharacterInventories");
                });

            modelBuilder.Entity("CypherBot.Models.CharacterRecoveryRoll", b =>
                {
                    b.Property<int>("RecoveryRollId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CharacterId");

                    b.Property<bool>("IsUsed");

                    b.Property<string>("RollName")
                        .HasMaxLength(25);

                    b.HasKey("RecoveryRollId");

                    b.HasIndex("CharacterId");

                    b.ToTable("CharacterRecoveryRolls");
                });

            modelBuilder.Entity("CypherBot.Models.Cypher", b =>
                {
                    b.Property<int>("CypherId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Effect")
                        .HasColumnType("varchar(2000)");

                    b.Property<int>("LevelBonus");

                    b.Property<int>("LevelDie");

                    b.Property<string>("Name")
                        .HasMaxLength(30);

                    b.Property<string>("Source")
                        .HasMaxLength(20);

                    b.Property<string>("Type")
                        .HasMaxLength(15);

                    b.HasKey("CypherId");

                    b.ToTable("Cyphers");
                });

            modelBuilder.Entity("CypherBot.Models.Descriptor", b =>
                {
                    b.Property<int>("DescriptorId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(1000);

                    b.Property<string>("Name")
                        .HasMaxLength(30);

                    b.HasKey("DescriptorId");

                    b.ToTable("Descriptors");
                });

            modelBuilder.Entity("CypherBot.Models.DescriptorAbility", b =>
                {
                    b.Property<int>("DescriptorAbilityId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(1000);

                    b.Property<int>("DescriptorId");

                    b.Property<string>("Name")
                        .HasMaxLength(30);

                    b.Property<string>("Source")
                        .HasMaxLength(20);

                    b.Property<int>("Tier");

                    b.HasKey("DescriptorAbilityId");

                    b.HasIndex("DescriptorId");

                    b.ToTable("DescriptorAbilities");
                });

            modelBuilder.Entity("CypherBot.Models.Focus", b =>
                {
                    b.Property<int>("FocusId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(1000);

                    b.Property<string>("Name")
                        .HasMaxLength(30);

                    b.HasKey("FocusId");

                    b.ToTable("Foci");
                });

            modelBuilder.Entity("CypherBot.Models.FocusAbility", b =>
                {
                    b.Property<int>("FocusAbilityId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(1000);

                    b.Property<int>("FocusId");

                    b.Property<string>("Name")
                        .HasMaxLength(30);

                    b.Property<string>("Source")
                        .HasMaxLength(20);

                    b.Property<int>("Tier");

                    b.HasKey("FocusAbilityId");

                    b.HasIndex("FocusId");

                    b.ToTable("FociAbilities");
                });

            modelBuilder.Entity("CypherBot.Models.Type", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(1000);

                    b.Property<int>("IntellectStartingPool");

                    b.Property<int>("MightStartingPool");

                    b.Property<string>("Name")
                        .HasMaxLength(30);

                    b.Property<int>("SpeedStartingPool");

                    b.HasKey("TypeId");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("CypherBot.Models.TypeAbility", b =>
                {
                    b.Property<int>("TypeAbilityId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(1000);

                    b.Property<string>("Name")
                        .HasMaxLength(30);

                    b.Property<string>("Source")
                        .HasMaxLength(20);

                    b.Property<int>("Tier");

                    b.Property<int>("TypeId");

                    b.HasKey("TypeAbilityId");

                    b.HasIndex("TypeId");

                    b.ToTable("TypeAbilities");
                });

            modelBuilder.Entity("CypherBot.Models.CharacterAbility", b =>
                {
                    b.HasOne("CypherBot.Models.Character", "Character")
                        .WithMany("CharacterAbilities")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CypherBot.Models.CharacterArtifact", b =>
                {
                    b.HasOne("CypherBot.Models.Character", "Character")
                        .WithMany("CharacterArtifacts")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CypherBot.Models.CharacterCypher", b =>
                {
                    b.HasOne("CypherBot.Models.Character", "Character")
                        .WithMany("Cyphers")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CypherBot.Models.CharacterInventory", b =>
                {
                    b.HasOne("CypherBot.Models.Character", "Character")
                        .WithMany("Inventory")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CypherBot.Models.CharacterRecoveryRoll", b =>
                {
                    b.HasOne("CypherBot.Models.Character", "Character")
                        .WithMany("RecoveryRolls")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CypherBot.Models.DescriptorAbility", b =>
                {
                    b.HasOne("CypherBot.Models.Descriptor", "Descriptor")
                        .WithMany("DescriptorAbilities")
                        .HasForeignKey("DescriptorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CypherBot.Models.FocusAbility", b =>
                {
                    b.HasOne("CypherBot.Models.Focus", "Focus")
                        .WithMany("FocusAbilities")
                        .HasForeignKey("FocusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CypherBot.Models.TypeAbility", b =>
                {
                    b.HasOne("CypherBot.Models.Type", "Type")
                        .WithMany("TypeAbilities")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
